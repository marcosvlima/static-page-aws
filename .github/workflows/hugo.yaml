name: Deploy Hugo site to aws

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.111.3
      AWS_DEFAULT_REGION: us-east-1
      BUCKET_NAME: marcosvlimacloud01static

    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb    

      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          cd app/ && \
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"          
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: static-files
          path: ./app/public

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v2
        env:
          AWS_DEFAULT_REGION: us-east-1
          BUCKET_NAME: marcosvlimacloud01static
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - uses: actions/download-artifact@master
        with:
          name: static-files
          path: ./app/public

      - name: Copy files to AWS S3 with AWS CLI
        run: |
          aws s3 sync ./app/public s3://${{ env.BUCKET_NAME }}/
